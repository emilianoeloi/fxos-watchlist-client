"use strict";var utils=this.utils||{};utils.ActionMenu=function(){function t(){var t=document.querySelector('[src*="'+o+'.js"]').src;return t.substring(0,t.lastIndexOf("/")+1)}function e(){var e=document.createElement("link");e.type="text/css",e.rel="stylesheet",e.href=t()+"action_menu_behavior.css",document.head.appendChild(e)}function n(){e();var t=document.querySelectorAll('[role="dialog"][data-type="action"]');Array.prototype.forEach.call(t,function(t){utils.ActionMenu.bind(t)})}function i(){Object.keys(a).forEach(function(t){a[t].destroy()}),a=Object.create(null),s=0}function c(t){var e=document.createElement("form");e.setAttribute("role","dialog"),e.dataset.type="action",e.classList.add("hidden"),t.id&&(e.id=t.id);var n=document.createElement("section"),i=document.createElement("h1");i.textContent=t.title||"",n.appendChild(i),e.appendChild(n);var c=t.actions;if(c){var o=document.createElement("menu");o.classList.add("actions"),c.forEach(function(t){var e=document.createElement("button");e.id=t.id,e.textContent=t.title,o.appendChild(e);var n=t.classList;n&&n.trim().split(/\s+/g).forEach(function(t){e.classList.add(t)})}),e.appendChild(o)}return e}var o="action_menu",a=Object.create(null),s=0,r=function(t){this.container=t,t.dataset.id=++s,this.callbacks=Object.create(null),t.addEventListener("click",this),t.addEventListener("animationend",this)};return r.prototype={get id(){return this.container.id},show:function(){this.container.classList.remove("hidden"),this.container.classList.add("onviewport")},hide:function(){this.container.classList.remove("onviewport")},addEventListener:function(t,e){"click"===t&&"function"==typeof e&&(this.callbacks[e]=e)},removeEventListener:function(t,e){"click"===t&&"function"==typeof e&&delete this.callbacks[e]},handleEvent:function(t){switch(t.type){case"click":if(t.stopPropagation(),t.preventDefault(),"BUTTON"!==t.target.tagName)return;window.setTimeout(this.hide.bind(this)),"function"==typeof this.onclick&&this.onclick(t);var e=this.callbacks;Object.keys(e).forEach(function(n){setTimeout(function(){e[n](t)})});break;case"animationend":var n="actionmenu-showed";"hide"===t.animationName&&(this.container.classList.add("hidden"),n="actionmenu-hidden"),window.dispatchEvent(new CustomEvent(n))}},destroy:function(){this.container&&(this.container.removeEventListener("click",this),this.container.removeEventListener("animationend",this),this.container.parentNode.removeChild(this.container),this.container=this.callbacks=this.onclick=null)}},"complete"===document.readyState?n():document.addEventListener("DOMContentLoaded",function d(){document.removeEventListener("DOMContentLoaded",d),n()}),{get:function(t){var e=document.getElementById(t);if(e)return a[e.dataset.id]},bind:function(t){t="object"==typeof t?t:document.querySelector(t);var e=a[t.dataset.id];return e?e:(e=new r(t),a[t.dataset.id]=e,e)},create:function(t){return c(t||{})},destroy:i}}();
document.querySelector("#btn-action-menu").addEventListener("click",function(){document.querySelector("#action-menu").className="fade-in"}),document.querySelector("#action-menu").addEventListener("click",function(){this.className="fade-out"}),document.querySelector("#btn-buttons").addEventListener("click",function(){document.querySelector("#buttons").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-buttons-back").addEventListener("click",function(){document.querySelector("#buttons").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-confirm").addEventListener("click",function(){document.querySelector("#confirm").className="fade-in"}),document.querySelector("#confirm").addEventListener("click",function(){this.className="fade-out"}),document.querySelector("#btn-edit-mode").addEventListener("click",function(){document.querySelector("#edit-mode").className="edit"}),document.querySelector("#edit-mode").addEventListener("click",function(){this.className=""}),document.querySelector("#btn-headers").addEventListener("click",function(){document.querySelector("#headers").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-headers-back").addEventListener("click",function(){document.querySelector("#headers").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-input-areas").addEventListener("click",function(){document.querySelector("#input-areas").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-input-areas-back").addEventListener("click",function(){document.querySelector("#input-areas").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-status").addEventListener("click",function(){utils.status.show("The Alarm is set for 7 hours and 14 minutes from now")}),document.querySelector("#btn-switches").addEventListener("click",function(){document.querySelector("#switches").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-switches-back").addEventListener("click",function(){document.querySelector("#switches").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-lists").addEventListener("click",function(){document.querySelector("#lists").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-lists-back").addEventListener("click",function(){document.querySelector("#lists").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-progress").addEventListener("click",function(){document.querySelector("#progress").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-progress-back").addEventListener("click",function(){document.querySelector("#progress").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-scrolling").addEventListener("click",function(){document.querySelector("#scrolling").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-scrolling-back").addEventListener("click",function(){document.querySelector("#scrolling").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-seek-bars").addEventListener("click",function(){document.querySelector("#seek-bars").className="current",document.querySelector('[data-position="current"]').className="left";var e=/webkit/i.test(navigator.appVersion)?"webkitAnimationEnd":"animationend";document.addEventListener(e,function t(){document.removeEventListener(e,t),utils.seekbars.init()})}),document.querySelector("#btn-seek-bars-back").addEventListener("click",function(){document.querySelector("#seek-bars").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-tabs").addEventListener("click",function(){document.querySelector("#tabs").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-tabs-back").addEventListener("click",function(){document.querySelector("#tabs").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-filters").addEventListener("click",function(){document.querySelector("#filters").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-filters-back").addEventListener("click",function(){document.querySelector("#filters").className="right",document.querySelector('[data-position="current"]').className="current"}),document.querySelector("#btn-toolbars").addEventListener("click",function(){document.querySelector("#toolbars").className="current",document.querySelector('[data-position="current"]').className="left"}),document.querySelector("#btn-toolbars-back").addEventListener("click",function(){document.querySelector("#toolbars").className="right",document.querySelector('[data-position="current"]').className="current"});
"use strict";var utils=this.utils||{};utils.seekbars=function(){function t(t,e,s){var r=t;return r=t>=s?h:e>=t?o:(t-e)/(s-e)}function e(t,e,s){var r=t;return r=t>=h?s:o>=t?e:(s-e)*t+e}function s(){r();for(var t=document.querySelectorAll('[role="slider"]'),e=0;e<t.length;e++)u.push(new g(t[e]))}function r(){u.forEach(function(t){t.destroy()}),u=[]}function i(){u.forEach(function(t){t.calculateDimensions(),t.valuestart=t.progress.value,t.placeHandler(t.valuestart)})}var n=/webkit/i.test(navigator.appVersion)?"webkit":/firefox/i.test(navigator.userAgent)?"Moz":"opera"in window?"O":"",a=n+"Transform",o=0,h=1,u=[],l="ontouchstart"in window,d=l?"touchstart":"mousedown",c=l?"touchmove":"mousemove",p=l?"touchend":"mouseup",v=function(){return l?function(t){return t.touches[0].pageX}:function(t){return t.pageX}}(),g=function(e){this.slider=e;var s=(this.handler=e.querySelector("progress + button"),this.progress=e.querySelector("progress"));this.calculateDimensions();var r=this.valuemin=parseFloat(e.getAttribute("aria-valuemin"))||o,i=this.valuemax=parseFloat(e.getAttribute("aria-valuemax"))||h;r>i&&(i=h);var n=parseFloat(e.getAttribute("aria-valuenow"));n||0===n||(n=r,e.setAttribute("aria-valuenow",n));var a=this.valuestart=t(n,r,i);this.placeHandler(a),s.value=a,s.max=h,e.addEventListener(d,this)};g.prototype={handleEvent:function(t){switch(t.type){case d:this.slider.removeEventListener(d,this),this.currentX=v(t),this.startX=this.handler.getBoundingClientRect().left+this.halfHandlerWidth,this.progressLeft>this.currentX&&(this.currentX=this.progressLeft),this.progressRight<this.currentX&&(this.currentX=this.progressRight),this.updateUI(),t.target===this.handler&&window.addEventListener(c,this),window.addEventListener(p,this);break;case c:t.preventDefault();var e=v(t);e<this.progressLeft?this.setValue(o):e>this.progressRight?this.setValue(h):(this.currentX=e,this.updateUI());break;case p:t.preventDefault(),this.deltaX=this.getDeltaX(),this.slider.addEventListener(d,this),window.removeEventListener(c,this),window.removeEventListener(p,this)}},getDeltaX:function(){return this.deltaX+this.currentX-this.startX},updateUI:function(){var t=this.getDeltaX();this.handler.style[a]="translateX("+t+"px)",this.setValue(this.valuestart+t/this.progressWidth)},setValue:function(t){this.progress.value=t,this.slider.setAttribute("aria-valuenow",e(t,this.valuemin,this.valuemax)),this.slider.dispatchEvent(new Event("change",{bubbles:!0}))},calculateDimensions:function(){this.progressWidth=this.progress.clientWidth,this.halfHandlerWidth=this.handler.clientWidth/2,this.progressLeft=this.progress.getBoundingClientRect().left,this.progressRight=this.progressLeft+this.progressWidth,this.deltaX=0},placeHandler:function(t){this.handler.style.left=this.progressWidth*t+this.progressLeft-this.progress.parentNode.getBoundingClientRect().left+"px",this.handler.style[a]="translateX(0)"},destroy:function(){this.slider.removeEventListener(d,this),this.progress=this.slider=this.handler=this.valuemax=this.valuemin=this.valuestart=this.progressWidth=this.deltaX=this.currentX=this.progressLeft=this.progressRight=null}},window.addEventListener("resize",i);try{screen.addEventListener("orientationchange",i)}catch(f){window.addEventListener("orientationchange",i)}return"complete"===document.readyState?s():document.addEventListener("DOMContentLoaded",function m(){document.removeEventListener("DOMContentLoaded",m),s()}),{init:s,destroy:r,bind:function(t){t="object"==typeof t?t:document.querySelector(t),u.push(new g(t))},create:function(t){var e=document.createElement("div");e.setAttribute("role","slider"),t&&Object.keys(t).forEach(function(s){e.setAttribute(s,t[s])});var s=document.createElement("div"),r=document.createElement("progress");return r.setAttribute("role","presentation"),s.appendChild(r),s.appendChild(document.createElement("button")),e.appendChild(s),e}}}();
"use strict";var utils=this.utils||{};utils.status=function(){function e(){null!==c&&(window.clearTimeout(c),c=null)}function t(t,n){if(e(),u.innerHTML="","string"==typeof t)u.textContent=t;else try{u.appendChild(t)}catch(o){console.error("DOMException: "+o.message)}a.classList.remove("hidden"),a.classList.add("onviewport"),c=window.setTimeout(i,n||r)}function n(t){var n="status-showed";"hide"===t.animationName&&(e(),a.classList.add("hidden"),n="status-hidden"),window.dispatchEvent(new CustomEvent(n))}function i(){a.classList.remove("onviewport")}function o(){a.removeEventListener("animationend",n),document.body.removeChild(a),e(),a=u=null}function d(){a=document.createElement("section"),a.setAttribute("role","status"),a.classList.add("hidden"),u=document.createElement("p"),a.appendChild(u),document.body.appendChild(a),a.addEventListener("animationend",n)}function s(){a||d()}var a,u,c,r=2e3;return"complete"===document.readyState?s():document.addEventListener("DOMContentLoaded",function l(){document.removeEventListener("DOMContentLoaded",l),s()}),{init:s,show:t,hide:i,destroy:o,setDuration:function(e){r=e||r}}}();
//# sourceMappingURL=data:application/json;base64,